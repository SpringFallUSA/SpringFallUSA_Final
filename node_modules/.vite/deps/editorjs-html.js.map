{
  "version": 3,
  "sources": ["../../editorjs-html/.build/edjsHTML.node.js"],
  "sourcesContent": ["\"use strict\";var e={code:({data:e})=>`<pre><code>${e.code}</code></pre>`,embed:({data:e})=>{const t=e.service;return\"vimeo\"===t?`<iframe src=\"${e.embed}\" height=\"${e.height}\" frameborder=\"0\" allow=\"autoplay; fullscreen; picture-in-picture\" allowfullscreen></iframe>`:\"youtube\"===t?`<iframe width=\"${e.width}\" height=\"${e.height}\" src=\"${e.embed}\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>`:(console.error(\"[editorjs-html]: Only Youtube & Vimeo embeds are available by default. Write your own embed parser for other options.\"),\"\")},header:({data:e})=>`<h${e.level}>${e.text}</h${e.level}>`,image:({data:e})=>{const t=e.caption?e.caption:\"Image\";return`<img src=\"${e?.file?.url||e?.url}\" alt=\"${t}\" />`},list:({data:e})=>{const t=\"unordered\"===e.style?\"ul\":\"ol\",r=(e,t)=>{const o=e.map((e=>{if(!e.content&&!e.items)return`<li>${e}</li>`;let o=\"\";return e.items?.length&&(o=r(e.items,t)),e.content?`<li>${e.content}${o}</li>`:void 0}));return`<${t}>${o.join(\"\")}</${t}>`};return r(e.items,t)},paragraph:({data:e})=>{const t=e.alignment||e.align;return t?`<p style=\"text-align:${t}\"> ${e.text} </p>`:`<p>${e.text}</p>`},quote:({data:e})=>`<blockquote>${e.text}</blockquote> - ${e.caption}`,delimiter:({data:e})=>\"<br/>\"};module.exports=(t={},r={strict:!1})=>{const o={...e,...t};return{parse:e=>(({blocks:e},t,r)=>e.reduce(((e,o)=>{if(o.type in t)return e+t[o.type](o);const i=`[editorjs-html]: Parser function for ${o.type} does not exist`;if(r.strict)throw new Error(i);return console.error(i),e}),\"\"))(e,o,r),parseBlock:e=>((e,t,r)=>{if(e.type in t)return t[e.type](e);const o=`[editorjs-html]: Parser function for ${e.type} does not exist`;if(r.strict)throw new Error(o);console.error(o)})(e,o,r)}};\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAa,QAAI,IAAE,EAAC,MAAK,CAAC,EAAC,MAAKA,GAAC,MAAI,cAAcA,GAAE,IAAI,iBAAgB,OAAM,CAAC,EAAC,MAAKA,GAAC,MAAI;AAAC,YAAM,IAAEA,GAAE;AAAQ,aAAM,YAAU,IAAE,gBAAgBA,GAAE,KAAK,aAAaA,GAAE,MAAM,iGAA+F,cAAY,IAAE,kBAAkBA,GAAE,KAAK,aAAaA,GAAE,MAAM,UAAUA,GAAE,KAAK,+KAA6K,QAAQ,MAAM,uHAAuH,GAAE;AAAA,IAAG,GAAE,QAAO,CAAC,EAAC,MAAKA,GAAC,MAAI,KAAKA,GAAE,KAAK,IAAIA,GAAE,IAAI,MAAMA,GAAE,KAAK,KAAI,OAAM,CAAC,EAAC,MAAKA,GAAC,MAAI;AAA7tB;AAA8tB,YAAM,IAAEA,GAAE,UAAQA,GAAE,UAAQ;AAAQ,aAAM,eAAa,KAAAA,MAAA,gBAAAA,GAAG,SAAH,mBAAS,SAAKA,MAAA,gBAAAA,GAAG,IAAG,UAAU,CAAC;AAAA,IAAM,GAAE,MAAK,CAAC,EAAC,MAAKA,GAAC,MAAI;AAAC,YAAM,IAAE,gBAAcA,GAAE,QAAM,OAAK,MAAK,IAAE,CAACA,IAAEC,OAAI;AAAC,cAAM,IAAED,GAAE,IAAK,CAAAA,OAAG;AAAl5B;AAAm5B,cAAG,CAACA,GAAE,WAAS,CAACA,GAAE,MAAM,QAAM,OAAOA,EAAC;AAAQ,cAAIE,KAAE;AAAG,mBAAO,KAAAF,GAAE,UAAF,mBAAS,YAASE,KAAE,EAAEF,GAAE,OAAMC,EAAC,IAAGD,GAAE,UAAQ,OAAOA,GAAE,OAAO,GAAGE,EAAC,UAAQ;AAAA,QAAM,CAAE;AAAE,eAAM,IAAID,EAAC,IAAI,EAAE,KAAK,EAAE,CAAC,KAAKA,EAAC;AAAA,MAAG;AAAE,aAAO,EAAED,GAAE,OAAM,CAAC;AAAA,IAAC,GAAE,WAAU,CAAC,EAAC,MAAKA,GAAC,MAAI;AAAC,YAAM,IAAEA,GAAE,aAAWA,GAAE;AAAM,aAAO,IAAE,wBAAwB,CAAC,MAAMA,GAAE,IAAI,UAAQ,MAAMA,GAAE,IAAI;AAAA,IAAM,GAAE,OAAM,CAAC,EAAC,MAAKA,GAAC,MAAI,eAAeA,GAAE,IAAI,mBAAmBA,GAAE,OAAO,IAAG,WAAU,CAAC,EAAC,MAAKA,GAAC,MAAI,QAAO;AAAE,WAAO,UAAQ,CAAC,IAAE,CAAC,GAAE,IAAE,EAAC,QAAO,MAAE,MAAI;AAAC,YAAM,IAAE,EAAC,GAAG,GAAE,GAAG,EAAC;AAAE,aAAM,EAAC,OAAM,CAAAA,QAAI,CAAC,EAAC,QAAOA,GAAC,GAAEC,IAAEE,OAAIH,GAAE,OAAQ,CAACA,IAAEE,OAAI;AAAC,YAAGA,GAAE,QAAQD,GAAE,QAAOD,KAAEC,GAAEC,GAAE,IAAI,EAAEA,EAAC;AAAE,cAAM,IAAE,wCAAwCA,GAAE,IAAI;AAAkB,YAAGC,GAAE,OAAO,OAAM,IAAI,MAAM,CAAC;AAAE,eAAO,QAAQ,MAAM,CAAC,GAAEH;AAAA,MAAC,GAAG,EAAE,GAAGA,IAAE,GAAE,CAAC,GAAE,YAAW,CAAAA,QAAI,CAACA,IAAEC,IAAEE,OAAI;AAAC,YAAGH,GAAE,QAAQC,GAAE,QAAOA,GAAED,GAAE,IAAI,EAAEA,EAAC;AAAE,cAAME,KAAE,wCAAwCF,GAAE,IAAI;AAAkB,YAAGG,GAAE,OAAO,OAAM,IAAI,MAAMD,EAAC;AAAE,gBAAQ,MAAMA,EAAC;AAAA,MAAC,GAAGF,IAAE,GAAE,CAAC,EAAC;AAAA,IAAC;AAAA;AAAA;",
  "names": ["e", "t", "o", "r"]
}
